// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.2
// source: kokuzeityo.proto

package kokuzeityo

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCorpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	AppId           string   `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	CorporateNumber []string `protobuf:"bytes,3,rep,name=corporateNumber,proto3" json:"corporateNumber,omitempty"`
}

func (x *GetCorpReq) Reset() {
	*x = GetCorpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kokuzeityo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCorpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCorpReq) ProtoMessage() {}

func (x *GetCorpReq) ProtoReflect() protoreflect.Message {
	mi := &file_kokuzeityo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCorpReq.ProtoReflect.Descriptor instead.
func (*GetCorpReq) Descriptor() ([]byte, []int) {
	return file_kokuzeityo_proto_rawDescGZIP(), []int{0}
}

func (x *GetCorpReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetCorpReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetCorpReq) GetCorporateNumber() []string {
	if x != nil {
		return x.CorporateNumber
	}
	return nil
}

type GetCorpRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Count  int32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Corps  []*Corp `protobuf:"bytes,4,rep,name=corps,proto3" json:"corps,omitempty"`
}

func (x *GetCorpRes) Reset() {
	*x = GetCorpRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kokuzeityo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCorpRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCorpRes) ProtoMessage() {}

func (x *GetCorpRes) ProtoReflect() protoreflect.Message {
	mi := &file_kokuzeityo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCorpRes.ProtoReflect.Descriptor instead.
func (*GetCorpRes) Descriptor() ([]byte, []int) {
	return file_kokuzeityo_proto_rawDescGZIP(), []int{1}
}

func (x *GetCorpRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *GetCorpRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetCorpRes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetCorpRes) GetCorps() []*Corp {
	if x != nil {
		return x.Corps
	}
	return nil
}

type Corp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorporateNumber          string `protobuf:"bytes,1,opt,name=corporateNumber,proto3" json:"corporateNumber,omitempty"`
	UpdateDate               string `protobuf:"bytes,2,opt,name=updateDate,proto3" json:"updateDate,omitempty"`
	ChangeDate               string `protobuf:"bytes,3,opt,name=changeDate,proto3" json:"changeDate,omitempty"`
	CorpName                 string `protobuf:"bytes,4,opt,name=corpName,proto3" json:"corpName,omitempty"`
	NameImageId              string `protobuf:"bytes,5,opt,name=nameImageId,proto3" json:"nameImageId,omitempty"`
	Kind                     string `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	PrefectureName           string `protobuf:"bytes,7,opt,name=prefectureName,proto3" json:"prefectureName,omitempty"`
	CityName                 string `protobuf:"bytes,8,opt,name=cityName,proto3" json:"cityName,omitempty"`
	StreetNumber             string `protobuf:"bytes,9,opt,name=streetNumber,proto3" json:"streetNumber,omitempty"`
	AddressImageId           string `protobuf:"bytes,10,opt,name=addressImageId,proto3" json:"addressImageId,omitempty"`
	PrefectureCd             string `protobuf:"bytes,11,opt,name=prefectureCd,proto3" json:"prefectureCd,omitempty"`
	CityCode                 string `protobuf:"bytes,12,opt,name=cityCode,proto3" json:"cityCode,omitempty"`
	PostCode                 string `protobuf:"bytes,13,opt,name=postCode,proto3" json:"postCode,omitempty"`
	AddressOutside           string `protobuf:"bytes,14,opt,name=addressOutside,proto3" json:"addressOutside,omitempty"`
	AddressOutsideImageId    string `protobuf:"bytes,15,opt,name=addressOutsideImageId,proto3" json:"addressOutsideImageId,omitempty"`
	CloseDate                string `protobuf:"bytes,16,opt,name=closeDate,proto3" json:"closeDate,omitempty"`
	CloseCause               string `protobuf:"bytes,17,opt,name=closeCause,proto3" json:"closeCause,omitempty"`
	SuccessorCorporateNumber string `protobuf:"bytes,18,opt,name=successorCorporateNumber,proto3" json:"successorCorporateNumber,omitempty"`
	ChangeCause              string `protobuf:"bytes,19,opt,name=changeCause,proto3" json:"changeCause,omitempty"`
	AssignmentDate           string `protobuf:"bytes,20,opt,name=assignmentDate,proto3" json:"assignmentDate,omitempty"`
	Latest                   string `protobuf:"bytes,21,opt,name=latest,proto3" json:"latest,omitempty"`
	EnName                   string `protobuf:"bytes,22,opt,name=enName,proto3" json:"enName,omitempty"`
	EnPrefectureName         string `protobuf:"bytes,23,opt,name=enPrefectureName,proto3" json:"enPrefectureName,omitempty"`
	EnCityName               string `protobuf:"bytes,24,opt,name=enCityName,proto3" json:"enCityName,omitempty"`
	EnAddressOutside         string `protobuf:"bytes,25,opt,name=enAddressOutside,proto3" json:"enAddressOutside,omitempty"`
	Furigana                 string `protobuf:"bytes,26,opt,name=furigana,proto3" json:"furigana,omitempty"`
	Hihyoji                  string `protobuf:"bytes,27,opt,name=hihyoji,proto3" json:"hihyoji,omitempty"`
}

func (x *Corp) Reset() {
	*x = Corp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kokuzeityo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Corp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Corp) ProtoMessage() {}

func (x *Corp) ProtoReflect() protoreflect.Message {
	mi := &file_kokuzeityo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Corp.ProtoReflect.Descriptor instead.
func (*Corp) Descriptor() ([]byte, []int) {
	return file_kokuzeityo_proto_rawDescGZIP(), []int{2}
}

func (x *Corp) GetCorporateNumber() string {
	if x != nil {
		return x.CorporateNumber
	}
	return ""
}

func (x *Corp) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

func (x *Corp) GetChangeDate() string {
	if x != nil {
		return x.ChangeDate
	}
	return ""
}

func (x *Corp) GetCorpName() string {
	if x != nil {
		return x.CorpName
	}
	return ""
}

func (x *Corp) GetNameImageId() string {
	if x != nil {
		return x.NameImageId
	}
	return ""
}

func (x *Corp) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Corp) GetPrefectureName() string {
	if x != nil {
		return x.PrefectureName
	}
	return ""
}

func (x *Corp) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *Corp) GetStreetNumber() string {
	if x != nil {
		return x.StreetNumber
	}
	return ""
}

func (x *Corp) GetAddressImageId() string {
	if x != nil {
		return x.AddressImageId
	}
	return ""
}

func (x *Corp) GetPrefectureCd() string {
	if x != nil {
		return x.PrefectureCd
	}
	return ""
}

func (x *Corp) GetCityCode() string {
	if x != nil {
		return x.CityCode
	}
	return ""
}

func (x *Corp) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *Corp) GetAddressOutside() string {
	if x != nil {
		return x.AddressOutside
	}
	return ""
}

func (x *Corp) GetAddressOutsideImageId() string {
	if x != nil {
		return x.AddressOutsideImageId
	}
	return ""
}

func (x *Corp) GetCloseDate() string {
	if x != nil {
		return x.CloseDate
	}
	return ""
}

func (x *Corp) GetCloseCause() string {
	if x != nil {
		return x.CloseCause
	}
	return ""
}

func (x *Corp) GetSuccessorCorporateNumber() string {
	if x != nil {
		return x.SuccessorCorporateNumber
	}
	return ""
}

func (x *Corp) GetChangeCause() string {
	if x != nil {
		return x.ChangeCause
	}
	return ""
}

func (x *Corp) GetAssignmentDate() string {
	if x != nil {
		return x.AssignmentDate
	}
	return ""
}

func (x *Corp) GetLatest() string {
	if x != nil {
		return x.Latest
	}
	return ""
}

func (x *Corp) GetEnName() string {
	if x != nil {
		return x.EnName
	}
	return ""
}

func (x *Corp) GetEnPrefectureName() string {
	if x != nil {
		return x.EnPrefectureName
	}
	return ""
}

func (x *Corp) GetEnCityName() string {
	if x != nil {
		return x.EnCityName
	}
	return ""
}

func (x *Corp) GetEnAddressOutside() string {
	if x != nil {
		return x.EnAddressOutside
	}
	return ""
}

func (x *Corp) GetFurigana() string {
	if x != nil {
		return x.Furigana
	}
	return ""
}

func (x *Corp) GetHihyoji() string {
	if x != nil {
		return x.Hihyoji
	}
	return ""
}

var File_kokuzeityo_proto protoreflect.FileDescriptor

var file_kokuzeityo_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6b, 0x6f, 0x6b, 0x75, 0x7a, 0x65, 0x69, 0x74, 0x79, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6b, 0x6f, 0x6b, 0x75, 0x7a, 0x65, 0x69, 0x74, 0x79, 0x6f, 0x22, 0x66,
	0x0a, 0x0a, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x74, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x72,
	0x70, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x70, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6f, 0x6b, 0x75, 0x7a, 0x65, 0x69, 0x74, 0x79, 0x6f,
	0x2e, 0x63, 0x6f, 0x72, 0x70, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x70, 0x73, 0x22, 0xae, 0x07, 0x0a,
	0x04, 0x63, 0x6f, 0x72, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61,
	0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x72, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x72, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x43,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x43, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74,
	0x73, 0x69, 0x64, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x6e, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x72, 0x69, 0x67,
	0x61, 0x6e, 0x61, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x72, 0x69, 0x67,
	0x61, 0x6e, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x69, 0x68, 0x79, 0x6f, 0x6a, 0x69, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x69, 0x68, 0x79, 0x6f, 0x6a, 0x69, 0x32, 0x50, 0x0a,
	0x0a, 0x4b, 0x6f, 0x6b, 0x75, 0x7a, 0x65, 0x69, 0x74, 0x79, 0x6f, 0x12, 0x42, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x6b, 0x6f, 0x6b, 0x75, 0x7a, 0x65, 0x69, 0x74, 0x79, 0x6f, 0x2e, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x72, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6b, 0x6f, 0x6b, 0x75, 0x7a, 0x65, 0x69, 0x74,
	0x79, 0x6f, 0x2e, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42,
	0x33, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x73, 0x65, 0x6d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x42, 0x0f, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0b, 0x2f, 0x6b, 0x6f, 0x6b, 0x75, 0x7a, 0x65,
	0x69, 0x74, 0x79, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kokuzeityo_proto_rawDescOnce sync.Once
	file_kokuzeityo_proto_rawDescData = file_kokuzeityo_proto_rawDesc
)

func file_kokuzeityo_proto_rawDescGZIP() []byte {
	file_kokuzeityo_proto_rawDescOnce.Do(func() {
		file_kokuzeityo_proto_rawDescData = protoimpl.X.CompressGZIP(file_kokuzeityo_proto_rawDescData)
	})
	return file_kokuzeityo_proto_rawDescData
}

var file_kokuzeityo_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kokuzeityo_proto_goTypes = []interface{}{
	(*GetCorpReq)(nil), // 0: kokuzeityo.getCorpReq
	(*GetCorpRes)(nil), // 1: kokuzeityo.getCorpRes
	(*Corp)(nil),       // 2: kokuzeityo.corp
}
var file_kokuzeityo_proto_depIdxs = []int32{
	2, // 0: kokuzeityo.getCorpRes.corps:type_name -> kokuzeityo.corp
	0, // 1: kokuzeityo.Kokuzeityo.GetCorporation:input_type -> kokuzeityo.getCorpReq
	1, // 2: kokuzeityo.Kokuzeityo.GetCorporation:output_type -> kokuzeityo.getCorpRes
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kokuzeityo_proto_init() }
func file_kokuzeityo_proto_init() {
	if File_kokuzeityo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kokuzeityo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCorpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kokuzeityo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCorpRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kokuzeityo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Corp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kokuzeityo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kokuzeityo_proto_goTypes,
		DependencyIndexes: file_kokuzeityo_proto_depIdxs,
		MessageInfos:      file_kokuzeityo_proto_msgTypes,
	}.Build()
	File_kokuzeityo_proto = out.File
	file_kokuzeityo_proto_rawDesc = nil
	file_kokuzeityo_proto_goTypes = nil
	file_kokuzeityo_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KokuzeityoClient is the client API for Kokuzeityo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KokuzeityoClient interface {
	GetCorporation(ctx context.Context, in *GetCorpReq, opts ...grpc.CallOption) (*GetCorpRes, error)
}

type kokuzeityoClient struct {
	cc grpc.ClientConnInterface
}

func NewKokuzeityoClient(cc grpc.ClientConnInterface) KokuzeityoClient {
	return &kokuzeityoClient{cc}
}

func (c *kokuzeityoClient) GetCorporation(ctx context.Context, in *GetCorpReq, opts ...grpc.CallOption) (*GetCorpRes, error) {
	out := new(GetCorpRes)
	err := c.cc.Invoke(ctx, "/kokuzeityo.Kokuzeityo/GetCorporation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KokuzeityoServer is the server API for Kokuzeityo service.
type KokuzeityoServer interface {
	GetCorporation(context.Context, *GetCorpReq) (*GetCorpRes, error)
}

// UnimplementedKokuzeityoServer can be embedded to have forward compatible implementations.
type UnimplementedKokuzeityoServer struct {
}

func (*UnimplementedKokuzeityoServer) GetCorporation(context.Context, *GetCorpReq) (*GetCorpRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCorporation not implemented")
}

func RegisterKokuzeityoServer(s *grpc.Server, srv KokuzeityoServer) {
	s.RegisterService(&_Kokuzeityo_serviceDesc, srv)
}

func _Kokuzeityo_GetCorporation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCorpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KokuzeityoServer).GetCorporation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kokuzeityo.Kokuzeityo/GetCorporation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KokuzeityoServer).GetCorporation(ctx, req.(*GetCorpReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kokuzeityo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kokuzeityo.Kokuzeityo",
	HandlerType: (*KokuzeityoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCorporation",
			Handler:    _Kokuzeityo_GetCorporation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kokuzeityo.proto",
}
